name: Preview Publish

on:
  issue_comment:
    types: [created]

jobs:
  preview-publish:
    # PR上のコメントであり、"/prev "から始まる内容であれば実行する
    if: github.event_name == 'issue_comment' && contains(github.event.comment.html_url, '/pull/') && startsWith(github.event.comment.body, '/prev')
    permissions:
      contents: "read"
      id-token: "write"
      issues: "write"
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Detect application name
        id: detect_app
        run: |
          # 有効なアプリ名のリスト
          app_names=(foo bar buz)
          app_name_regex=$(IFS="|"; echo "${app_names[*]}")

          if [[ "${{ github.event.comment.body }}" =~ ^\/prev\s+($app_name_regex)$ ]]; then
            echo "app=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
          else
            echo "Not a valid application name. Skipping deployment."
            exit 0
          fi

      - name: Detect PR
        id: detect_pr
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const pull_request = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            })
            return {branch: pull_request.data.head.ref, base_branch: pull_request.data.base.ref, sha: pull_request.data.sha, number: pull_request.data.number}

      - name: Check if base branch is env branch
        run: |
          # 有効なベースブランチのリスト
          base_branches=(stg qa dev)
          base_branch_regex=$(IFS="|"; echo "${base_branches[*]}")

          if [[ "${{ steps.detect_pr.outputs.base_branch }}" =~ ^($base_branch_regex)$ ]]; then
            echo "Base branch is valid."
          else
            echo "The base branch does not match dev, qa, or stg. Skipping deployment."
            exit 0
          fi

      - name: Dump vars
        run: |
          echo "app=${{ steps.detect_app.outputs.app }}"
          echo "branch=${{ steps.detect_pr.outputs.branch }}"
          echo "base_branch=${{ steps.detect_pr.outputs.base_branch }}"
          echo "sha=${{ steps.detect_pr.outputs.sha }}"
          echo "number=${{ steps.detect_pr.outputs.number }}"
