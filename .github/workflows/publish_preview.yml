name: Preview Publish

on:
  issue_comment:
    types: [created]

jobs:
  preview-publish:
    # PR上のコメントであり、"/prev "から始まる内容であれば実行する
    if: github.event_name == 'issue_comment' && contains(github.event.comment.html_url, '/pull/') && startsWith(github.event.comment.body, '/prev ')
    permissions:
      contents: "read"
      id-token: "write"
      issues: "write"
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Detect application name
        id: detect_app
        run: |
          app_name=$(echo "${{ github.event.comment.body }}" | sed 's|^/prev ||')

          valid_app_names=(foo bar buz)
          for valid_app_name in "${valid_app_names[@]}"; do
            if [[ $app_name == $valid_app_name ]]; then
              echo "Valid app name: $app_name"
              echo "app=$app_name" >> $GITHUB_OUTPUT
              exit 0
            fi
          done

          echo "Invalid app name: $app_name"
          exit 1

      - name: Detect PR
        id: detect_pr
        run: |
          PR=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" ${{ github.event.issue.pull_request.url }})
          echo "branch=$(echo $PR | jq -r '.head.ref')" >> $GITHUB_OUTPUT
          echo "base_branch=$(echo $PR | jq -r '.base.ref')" >> $GITHUB_OUTPUT
          echo "sha=$(echo $PR | jq -r '.head.sha')" >> $GITHUB_OUTPUT
          echo "number=$(echo $PR | jq -r '.number')" >> $GITHUB_OUTPUT

      - name: Check if base branch is env branch
        run: |
          base_branch=${{ steps.detect_pr.outputs.base_branch }}

          valid_base_branches=(stg qa dev)
          for valid_base_branch in "${valid_base_branches[@]}"; do
            if [[ $base_branch == $valid_base_branch ]]; then
              echo "Valid base branch: $valid_base_branch"
              exit 0
            fi
          done

          echo "Invalid base branch: $base_branch"
          exit 1

      - name: Dump vars
        run: |
          echo "app=${{ steps.detect_app.outputs.app }}"
          echo "branch=${{ steps.detect_pr.outputs.branch }}"
          echo "base_branch=${{ steps.detect_pr.outputs.base_branch }}"
          echo "sha=${{ steps.detect_pr.outputs.sha }}"
          echo "number=${{ steps.detect_pr.outputs.number }}"
